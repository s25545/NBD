1.
MATCH (Darjeeling:town { name: 'Darjeeling'}), (Sandakphu:peak { name: 'Sandakphu'})
MATCH p = ShortestPath((Darjeeling)-[*]->(Sandakphu))
RETURN p

2.
MATCH p = ShortestPath((Darjeeling:town{name:'Darjeeling'})-[*]->(Sandakphu:peak{name:'Sandakphu'}))
WHERE ALL(r in relationships(p) WHERE r.winter = "true")
RETURN p

3.
MATCH p = (Darjeeling:town {name: 'Darjeeling'})-[*]->(Sandakphu:peak {name:'Sandakphu'})
RETURN p, REDUCE(distance = 0, p IN relationships(p) | distance + p.distance) AS distance
ORDER BY distance

4.
MATCH p = (Darjeeling:town {name: 'Darjeeling'})-[*]->(destination)
WHERE ALL(p IN relationships(p) WHERE type(p) = 'twowheeler' AND p.summer = 'true')
RETURN p

5.
MATCH (flight:Flight)-[origin:ORIGIN]->(airport:Airport)
RETURN airport, count(origin) AS NumberOfFlights
ORDER BY NumberOfFlights
